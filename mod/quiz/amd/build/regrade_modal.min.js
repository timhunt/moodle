define("mod_quiz/regrade_modal",["exports","core/modal","core/fragment","core/str","core/notification"],(function(_exports,_modal,_fragment,_str,_notification){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Regrade modal form is used to regrade or dryrun the attempts and questions.
   *
   * @module mod_quiz/regrade_modal
   * @copyright 2024 The Open University
   * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_modal=_interopRequireDefault(_modal),_fragment=_interopRequireDefault(_fragment),_notification=_interopRequireDefault(_notification);const transformForm=(allQuestionsButton,selectedQuestionsButton,questionIdCheckboxes,regradeButton,dryRun,modalBody)=>{let isChecked=null!==modalBody.querySelector('[id^="id_questionids_"]:checked');regradeButton.disabled=dryRun.disabled=!1,allQuestionsButton.checked&&questionIdCheckboxes.forEach((questionIdCheckbox=>{questionIdCheckbox.disabled=!0})),selectedQuestionsButton.checked&&(questionIdCheckboxes.forEach((questionIdCheckbox=>{questionIdCheckbox.disabled=!1})),isChecked||(regradeButton.disabled=dryRun.disabled=!0))},handleClick=(e,allAttemptsrButton,selectedAttemptsrButton,allQuestionsrButton,selectedQuestionsrButton,questionIdCheckboxes,modalBody)=>{e.preventDefault(),allAttemptsrButton.checked&&allQuestionsrButton.checked&&(modalBody.querySelector('input[name="regradeall"]').value=!0),selectedAttemptsrButton.checked&&allQuestionsrButton.checked&&(modalBody.querySelector('input[name="regrade"]').value=!0,appendAttemptCheckboxesId(modalBody)),allAttemptsrButton.checked&&selectedQuestionsrButton.checked&&(modalBody.querySelector('input[name="regradealllwithquestionselected"]').value=!0,modalBody.querySelector('input[name="questionslots"]').value=getCheckedQuestionSlots(questionIdCheckboxes)),selectedAttemptsrButton.checked&&selectedQuestionsrButton.checked&&(modalBody.querySelector('input[name="regradewithquestionselected"]').value=!0,modalBody.querySelector('input[name="questionslots"]').value=getCheckedQuestionSlots(questionIdCheckboxes),appendAttemptCheckboxesId(modalBody)),"dryrun"===e.target.name&&(modalBody.querySelector('form input[name="dryrun"]').value=!0),modalBody.querySelector("form").submit()},appendAttemptCheckboxesId=modalBody=>{document.querySelectorAll('[id^="attemptid_"]:checked').forEach((checkbox=>{checkbox.type="hidden",modalBody.querySelector("form").append(checkbox)}))},getCheckedQuestionSlots=questionIdCheckboxes=>{let questionSlots="";return questionIdCheckboxes.forEach((questionIdCheckbox=>{if(questionIdCheckbox.checked){const questionSlot=questionIdCheckbox.dataset.questionslot;questionSlots+=(questionSlots.length>0?",":"")+questionSlot}})),questionSlots};_exports.init=context=>{const regradeAttempts=document.getElementById("regradeattempts");regradeAttempts&&regradeAttempts.addEventListener("click",(async e=>{e.preventDefault();const questionIdsInTable=document.querySelector('#attemptsform input[name="questionids"]').value,questionSlotsInTable=document.querySelector('#attemptsform input[name="questionslots"]').value,reportId=document.querySelector('#attemptsform input[name="id"]').value,questionMode=document.querySelector('#attemptsform input[name="mode"]').value,formFragment=_fragment.default.loadFragment("mod_quiz","regrade_modal",context,{questionIdsInTable:questionIdsInTable,questionSlotsInTable:questionSlotsInTable,reportId:reportId,questionMode:questionMode}),modal=await _modal.default.create({title:(0,_str.getString)("regrade","quiz_overview"),body:formFragment,isVerticallyCentered:!0,removeOnClose:!0,show:!0});modal.bodyPromise.then((function(){(modal=>{const helpText=document.querySelector("#id_regradelabel_label + div > a");modal.getTitle().append(helpText);const modalBody=modal.getBody()[0],allAttemptsButton=modalBody.querySelector("#id_attempts_0"),selectedAttemptsButton=modalBody.querySelector("#id_attempts_1"),allQuestionsButton=modalBody.querySelector("#id_questions_0"),selectedQuestionsButton=modalBody.querySelector("#id_questions_1"),questionIdCheckboxes=modalBody.querySelectorAll('[id^="id_questionids_"]'),selectAll=document.getElementById("mod-quiz-report-overview-report-selectall-attempts");(null!==document.querySelector('[id^="attemptid_"]:checked')||selectAll.checked)&&(selectedAttemptsButton.checked=!0),allAttemptsButton.checked&&(selectedAttemptsButton.disabled=!0),allQuestionsButton.checked&&questionIdCheckboxes.forEach((questionIdCheckbox=>{questionIdCheckbox.disabled=!0}));const regradeButton=modalBody.querySelector("#id_regradenow"),dryRun=modalBody.querySelector("#id_dryrun");modalBody.querySelector("form").addEventListener("change",(()=>{transformForm(allQuestionsButton,selectedQuestionsButton,questionIdCheckboxes,regradeButton,dryRun,modalBody)})),regradeButton.addEventListener("click",(e=>handleClick(e,allAttemptsButton,selectedAttemptsButton,allQuestionsButton,selectedQuestionsButton,questionIdCheckboxes,modalBody))),dryRun.addEventListener("click",(e=>handleClick(e,allAttemptsButton,selectedAttemptsButton,allQuestionsButton,selectedQuestionsButton,questionIdCheckboxes,modalBody)))})(modal)})).catch(_notification.default.exception)}))}}));

//# sourceMappingURL=regrade_modal.min.js.map