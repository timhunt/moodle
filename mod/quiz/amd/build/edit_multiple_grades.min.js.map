{"version":3,"file":"edit_multiple_grades.min.js","sources":["../src/edit_multiple_grades.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for managing multiple grade items for a quiz.\n *\n * @module     mod_quiz/edit_multiple_grades\n * @copyright  2023 THe Open University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {call as fetchMany} from 'core/ajax';\nimport {addIconToContainerRemoveOnCompletion} from 'core/loadingicon';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\n\n/**\n * Call the Ajax service to delete a quiz grade item.\n *\n * @param {Number} quizId\n * @param {Number} gradeItemId\n * @return {Promise}\n */\nconst deleteGradeItem = (quizId, gradeItemId) => fetchMany([{\n    methodname: 'mod_quiz_delete_grade_items',\n    args: {\n        quizid: quizId,\n        quizgradeitems: [{id: gradeItemId}],\n    }\n}])[0];\n\n/**\n * Handle the an event if it is a click on the delete icon.\n *\n * @param {Event} e click event.\n */\nconst handleGradeItemDelete = (e) => {\n    e.preventDefault();\n    const pending = new Pending('delete-quiz-grade-item');\n\n    const tableCell = e.target.closest('td');\n    addIconToContainerRemoveOnCompletion(tableCell, pending);\n\n    const tableRow = tableCell.closest('tr');\n    const quizId = tableRow.closest('table').dataset.quizId;\n    const gradeItemId = tableRow.dataset.quizGradeItemId;\n\n    deleteGradeItem(quizId, gradeItemId)\n        .then(() => pending.resolve())\n        .then(() => {\n            window.location.reload();\n        })\n        .catch(Notification.exception);\n};\n\n/**\n * Handle clicks in the table the shows the grade items.\n *\n * @param {Event} e click event.\n */\nconst handleGradeItemClick = (e) => {\n    const link = e.target.closest('a');\n\n    if (!link) {\n        return;\n    }\n\n    if (link.dataset.actionDelete) {\n        handleGradeItemDelete(e);\n    }\n};\n\n/**\n * Replace the container with a new version.\n */\nconst registerEventListeners = () => {\n    const gradeItemTable = document.getElementById('mod_quiz-grade-item-list');\n    if (!gradeItemTable) {\n        return;\n    }\n\n    gradeItemTable.addEventListener('click', handleGradeItemClick);\n};\n\n/**\n * Entry point.\n */\nexport const init = () => {\n    registerEventListeners();\n};\n"],"names":["handleGradeItemDelete","e","preventDefault","pending","Pending","tableCell","target","closest","tableRow","quizId","gradeItemId","methodname","args","quizid","quizgradeitems","id","deleteGradeItem","dataset","quizGradeItemId","then","resolve","window","location","reload","catch","Notification","exception","handleGradeItemClick","link","actionDelete","gradeItemTable","document","getElementById","addEventListener","registerEventListeners"],"mappings":";;;;;;;sLAgDMA,sBAAyBC,IAC3BA,EAAEC,uBACIC,QAAU,IAAIC,iBAAQ,0BAEtBC,UAAYJ,EAAEK,OAAOC,QAAQ,4DACEF,UAAWF,eAE1CK,SAAWH,UAAUE,QAAQ,MApBf,EAACE,OAAQC,eAAgB,cAAU,CAAC,CACxDC,WAAY,8BACZC,KAAM,CACFC,OAAQJ,OACRK,eAAgB,CAAC,CAACC,GAAIL,kBAE1B,GAkBAM,CAHeR,SAASD,QAAQ,SAASU,QAAQR,OAC7BD,SAASS,QAAQC,iBAGhCC,MAAK,IAAMhB,QAAQiB,YACnBD,MAAK,KACFE,OAAOC,SAASC,YAEnBC,MAAMC,sBAAaC,YAQtBC,qBAAwB1B,UACpB2B,KAAO3B,EAAEK,OAAOC,QAAQ,KAEzBqB,MAIDA,KAAKX,QAAQY,cACb7B,sBAAsBC,kBAmBV,KAZW,YACrB6B,eAAiBC,SAASC,eAAe,4BAC1CF,gBAILA,eAAeG,iBAAiB,QAASN,uBAOzCO"}